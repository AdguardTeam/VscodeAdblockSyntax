{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Adblock",
	"patterns": [
		{
			"include": "#adblockAgent"
		},
		{
			"include": "#preprocessor"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#snippetRulesABP"
		},
		{
			"include": "#cssRules"
		},
		{
			"include": "#scriptletRules"
		},
		{
			"include": "#scriptletRulesUBO"
		},
		{
			"include": "#jsRules"
		},
		{
			"include": "#contentRules"
		},
		{
			"include": "#elemhideRules"
		},
		{
			"include": "#basicRulesNoUrl"
		},
		{
			"include": "#basicRules"
		}
	],
	"repository": {
		"adblockAgent": {
			"patterns": [
				{
					"match": "^(\\[)([^\\]]+)(\\])\\s*$",
					"captures": {
						"1": {
							"name": "punctuation.definition.array.start.ablock.agent"
						},
						"2": {
							"patterns": [
								{
									"include": "#adblockData"
								},
								{
									"match": ";",
									"name": "punctuation.separator"
								},
								{
									"name": "invalid.illegal",
									"match": ".*"
								}
							]
						},
						"3": {
							"name": "punctuation.definition.array.end.ablock.agent"
						}
					}
				}
			]
		},
		"adblockData": {
			"patterns": [
				{
					"match": "(?:\\s*)([Aa]d[Bb]lock(?:\\s[Pp]lus)?|u[Bb]lock(?:\\s[Oo]rigin)?|[Aa]d[Gg]uard)(?:\\s+(\\d+(?:\\.\\d+)*+\\+?))?(?:\\s*)",
					"captures": {
						"1": {
							"name": "constant.language.agent.adblocker.name"
						},
						"2": {
							"name": "constant.numeric.decimal"
						}
					}
				}
			]
		},
		"preprocessor": {
			"patterns": [
				{
					"match": "^(!#if) (.*)$",
					"captures": {
						"1": {
							"name": "keyword.preprocessor.directive"
						},
						"2": {
							"patterns": [
								{
									"name": "constant.language.platform.name",
									"match": "(adguard_app_windows|adguard_app_mac|adguard_app_android|adguard_app_ios|adguard_ext_chromium|adguard_ext_firefox|adguard_ext_edge|adguard_ext_safari|adguard_ext_opera|adguard_ext_android_cb|adguard|ext_abp|ext_ublock|env_chromium|env_edge|env_firefox|env_mobile|env_safari|false|cap_html_filtering|cap_user_stylesheet)"
								},
								{
									"name": "keyword.control.characters",
									"match": "(&&|!|\\|\\|| )"
								},
								{
									"name": "keyword.control.characters",
									"match": "(\\(|\\))"
								},
								{
									"name": "invalid.illegal",
									"match": ".*"
								}
							]
						}
					}
				},
				{
					"match": "^(!#include) (.*)$",
					"captures": {
						"1": {
							"name": "keyword.preprocessor.directive"
						},
						"2": {
							"name": "string.unquoted"
						}
					}
				},
				{
					"match": "^!#endif\\s*$",
					"name": "keyword.preprocessor.directive"
				},
				{
					"match": "^(!#safari_cb_affinity)(.*)$",
					"captures": {
						"1": {
							"name": "keyword.preprocessor.directive"
						},
						"2": {
							"patterns": [
								{
									"name": "constant.language.contentblocker.name",
									"match": "(all|general|privacy|social|security|other|custom)"
								},
								{
									"name": "keyword.control.characters",
									"match": "(\\(|\\)|,)"
								},
								{
									"name": "invalid.illegal",
									"match": ".*"
								}
							]
						}
					}
				},
				{
					"match": "^(!\\+) (.*)$",
					"captures": {
						"1": {
							"name": "keyword.preprocessor.hint"
						},
						"2": {
							"patterns": [
								{
									"name": "keyword.control.hint.name",
									"match": "(NOT_OPTIMIZED|OPTIMIZED|PLATFORM|NOT_PLATFORM)"
								},
								{
									"name": "constant.language.platform.name",
									"match": "(windows|mac|android|ios|ext_chromium|ext_ff|ext_edge|ext_opera|ext_ublock|ext_safari|ext_android_cb)"
								},
								{
									"name": "keyword.control.characters",
									"match": "(\\(|\\)|,)"
								}
							]
						}
					}
				},
				{
					"match": "^!#.+$",
					"name": "invalid.preprocessor"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line",
					"match": "^!.*"
				},
				{
					"name": "comment.line.batch-style",
					"match": "^# .*"
				},
				{
					"name": "comment.line.batch-style",
					"match": "^#$"
				}
			]
		},
		"elemhideRules": {
			"patterns": [
				{
					"match": "^(\\[.+?\\])?(.*?)(#@?\\??#\\^?)(.+)$",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#cosmeticRulesOptions"
								}
							]
						},
						"2": {
							"patterns": [
								{
									"include": "#domainListCommaSeparated"
								}
							]
						},
						"3": {
							"name": "keyword.control.adblock"
						},
						"4": {
							"patterns": [
								{
									"include": "#cssSelector"
								}
							]
						}
					}
				}
			]
		},
		"snippetRulesABP": {
			"patterns": [
				{
					"match": "^(.*?)(#\\$#)([^\\{\\}]+(?:(?:\\{\\d+\\})[^\\{\\}]+)*)$",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#domainListCommaSeparated"
								}
							]
						},
						"2": {
							"name": "keyword.control.adblock"
						},
						"3": {
							"patterns": [
								{
									"match": "(?<=#\\$\\??#|;)(?:\\s*)([a-z0-9-]+)",
									"name": "entity.name.function.abp-scriptlet-name"
								},
								{
									"match": "(?<!#\\$\\??#|;)(?:\\s+)(?:(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")|('[^'\\\\]*(?:\\.[^'\\\\]*)*')|([^;]*))",
									"captures": {
										"1": {
											"name": "string.quoted.double.abp-scriptlet-arg"
										},
										"2": {
											"name": "string.quoted.single.abp-scriptlet-arg"
										},
										"3": {
											"name": "string.unquoted.abp-scriptlet-arg"
										}
									}
								},
								{
									"match": ";",
									"name": "keyword.other.delimiter"
								},
								{
									"match": ".*",
									"name": "invalid.illegal"
								}
							]
						}
					}
				}
			]
		},
		"cssRules": {
			"patterns": [
				{
					"match": "^(\\[.+?\\])?(.*?)(#@?\\$\\??#)(.+)$",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#cosmeticRulesOptions"
								}
							]
						},
						"2": {
							"patterns": [
								{
									"include": "#domainListCommaSeparated"
								}
							]
						},
						"3": {
							"name": "keyword.control.adblock"
						},
						"4": {
							"patterns": [
								{
									"include": "#cssStyle"
								}
							]
						}
					}
				}
			]
		},
		"contentRules": {
			"patterns": [
				{
					"match": "^(\\[.+?\\])?(.*?)(\\$@?\\$)(.+?)(\\[.+)?$",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#cosmeticRulesOptions"
								}
							]
						},
						"2": {
							"patterns": [
								{
									"include": "#domainListCommaSeparated"
								}
							]
						},
						"3": {
							"name": "keyword.control.adblock"
						},
						"4": {
							"name": "entity.name.function.adblock"
						},
						"5": {
							"patterns": [
								{
									"include": "#contentAttributes"
								}
							]
						}
					}
				}
			]
		},
		"scriptletRules": {
			"patterns": [
				{
					"match": "^(\\[.+?\\])?(.*?)(#@?%#)(\\/\\/scriptlet)(\\()(.+)(\\)\\s*)$",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#cosmeticRulesOptions"
								}
							]
						},
						"2": {
							"patterns": [
								{
									"include": "#domainListCommaSeparated"
								}
							]
						},
						"3": {
							"name": "keyword.control.adblock"
						},
						"4": {
							"name": "entity.name.function.adblock"
						},
						"5": {
							"name": "punctuation.section.adblock"
						},
						"6": {
							"patterns": [
								{
									"include": "#scriptletFunction"
								}
							]
						},
						"7": {
							"name": "punctuation.section.adblock"
						}
					}
				}
			]
		},
		"scriptletRulesUBO": {
			"patterns": [
				{
					"match": "^(.*?)(#@?#)(\\+js)(\\()(.+)(\\)\\s*)$",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#domainListCommaSeparated"
								}
							]
						},
						"2": {
							"name": "keyword.control.adblock"
						},
						"3": {
							"name": "entity.name.function.adblock"
						},
						"4": {
							"name": "punctuation.section.adblock"
						},
						"5": {
							"patterns": [
								{
									"include": "#scriptletFunctionUBO"
								}
							]
						},
						"6": {
							"name": "punctuation.section.adblock"
						}
					}
				}
			]
		},
		"jsRules": {
			"patterns": [
				{
					"begin": "^(.*?)(#@?%#)",
					"beginCaptures": {
						"1": {
							"patterns": [
								{
									"include": "#domainListCommaSeparated"
								}
							]
						},
						"2": {
							"name": "keyword.control.adblock"
						}
					},
					"end": "$",
					"contentName": "source.js",
					"patterns": [
						{
							"include": "source.js"
						}
					]
				}
			]
		},
		"basicRulesNoUrl": {
			"patterns": [
				{
					"match": "^(\\$)(.+)$",
					"captures": {
						"1": {
							"name": "keyword.control.adblock"
						},
						"2": {
							"patterns": [
								{
									"include": "#basicRulesOptions"
								}
							]
						}
					}
				}
			]
		},
		"basicRules": {
			"patterns": [
				{
					"match": "^(.+?)((\\$(?!\\/))(.*))?$",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#urlPattern"
								}
							]
						},
						"3": {
							"name": "keyword.control.adblock"
						},
						"4": {
							"patterns": [
								{
									"include": "#basicRulesOptions"
								}
							]
						}
					}
				}
			]
		},
		"urlPattern": {
			"patterns": [
				{
					"name": "string.regexp.adblock",
					"match": "^(@@)?(\\/)(.+)\\/$",
					"captures": {
						"1": {
							"name": "keyword.other.adblock"
						}
					}
				},
				{
					"match": "^@@\\|?\\|?",
					"name": "keyword.other.adblock"
				},
				{
					"match": "^\\|\\|",
					"name": "keyword.other.adblock"
				},
				{
					"match": "^\\|",
					"name": "keyword.other.adblock"
				},
				{
					"match": "\\|$",
					"name": "keyword.other.adblock"
				},
				{
					"match": "\\^",
					"name": "keyword.other.adblock"
				},
				{
					"match": "\\*",
					"name": "keyword.other.adblock"
				}
			]
		},
		"basicRulesOptions": {
			"patterns": [
				{
					"match": "replace=((\\/)(((\\\\\\/)|[^,\/]|(\\\\,))+?)(\\/)(((\\\\\\/)|[^,\/]|(\\\\,))*?)(\\/)([a-z]*))",
					"name": "keyword.other.adblock",
					"captures": {
						"1": {
							"name": "string.regexp.adblock"
						}
					}
				},
				{
					"match": "(domain|denyallow)(=)([^,]+)",
					"captures": {
						"1": {
							"name": "keyword.other.adblock"
						},
						"2": {
							"name": "keyword.operator.adblock"
						},
						"3": {
							"patterns": [
								{
									"include": "#domainListPipeSeparated"
								}
							]
						}
					}
				},
				{
					"match": "(app)(=)([^,]+)",
					"captures": {
						"1": {
							"name": "keyword.other.adblock"
						},
						"2": {
							"name": "keyword.operator.adblock"
						},
						"3": {
							"patterns": [
								{
									"include": "#appListPipeSeparated"
								}
							]
						}
					}
				},
				{
					"match": "(dnstype)(=)([^,]+)",
					"captures": {
						"1": {
							"name": "keyword.other.adblock"
						},
						"2": {
							"name": "keyword.operator.adblock"
						},
						"3": {
							"patterns": [
								{
									"include": "#dnsTypesPipeSeparated"
								}
							]
						}
					}
				},
				{
					"match": "(client|ctag)(=)(((\\\\,)|[^,])+)",
					"captures": {
						"1": {
							"name": "keyword.other.adblock"
						},
						"2": {
							"name": "keyword.operator.adblock"
						},
						"3": {
							"patterns": [
								{
									"include": "#dnsClientsPipeSeparated"
								}
							]
						}
					}
				},
				{
					"match": "(redirect|redirect-rule|csp|cookie)(=)(((\\\\,)|[^,])+)",
					"name": "keyword.other.adblock",
					"captures": {
						"1": {
							"name": "keyword.other.adblock"
						},
						"2": {
							"name": "keyword.operator.adblock"
						},
						"3": {
							"name": "string.unquoted.adblock"
						}
					}
				},
				{
					"match": "(dnsrewrite)(=)(((\\\\,)|[^,])+)",
					"name": "keyword.other.adblock",
					"captures": {
						"1": {
							"name": "keyword.other.adblock"
						},
						"2": {
							"name": "keyword.operator.adblock"
						},
						"3": {
							"patterns": [
								{
									"name": "keyword.other.delimiter",
									"match": ";"
								},
								{
									"name": "string.unquoted.adblock",
									"match": "[^;]*"
								}
							]
						}
					}
				},
				{
					"match": "(removeheader)(=)(((\\\\,)|[^,])+)",
					"name": "keyword.other.adblock",
					"captures": {
						"1": {
							"name": "keyword.other.adblock"
						},
						"2": {
							"name": "keyword.operator.adblock"
						},
						"3": {
							"patterns": [
								{
									"name": "keyword.other.delimiter",
									"match": ":"
								},
								{
									"name": "string.unquoted.adblock",
									"match": "[^:]*"
								}
							]
						}
					}
				},
				{
					"match": "(rewrite)(=)(abp-resource:)([^,]+)",
					"name": "keyword.other.adblock",
					"captures": {
						"1": {
							"name": "keyword.other.adblock"
						},
						"2": {
							"name": "keyword.operator.adblock"
						},
						"3": {
							"name": "keyword.other.adblock"
						},
						"4": {
							"name": "string.unquoted.adblock"
						}
					}
				},
				{
					"match": "(removeparam|queryprune)(=)(~)?(((\\\\,)|[^,])+)",
					"name": "keyword.other.adblock",
					"captures": {
						"1": {
							"name": "keyword.other.adblock"
						},
						"2": {
							"name": "keyword.operator.adblock"
						},
						"3": {
							"name": "keyword.other.adblock"
						},
						"4": {
							"name": "string.unquoted.adblock"
						}
					}
				},
				{
					"match": "(inline-script|inline-font|mp4|empty|badfilter|genericblock|generichide|network|popup|popunder|important|cookie|csp|replace|stealth|removeparam|queryprune)",
					"name": "keyword.other.adblock"
				},
				{
					"match": "(~?)(xhr|first-party|third-party|match-case|elemhide|content|jsinject|urlblock|document|image|stylesheet|script|object-subrequest|object|font|media|subdocument|xmlhttprequest|websocket|other|webrtc|ping|extension|all|1p|3p|css|frame|ghide|ehide|shide|specifichide)",
					"name": "keyword.other.adblock"
				},
				{
					"match": ",",
					"name": "punctuation.definition.adblock"
				},
				{
					"match": "\\$",
					"name": "invalid.illegal.redundant.modifier.separator"
				}
			]
		},
		"cosmeticRulesOptions": {
			"match": "(\\[)(.+?)(\\])",
			"captures": {
				"1": {
					"name": "keyword.control.adblock"
				},
				"2": {
					"patterns": [
						{
							"match": "(path)(=)(((\\\\,)|[^,])+)",
							"captures": {
								"1": {
									"name": "keyword.other.adblock"
								},
								"2": {
									"name": "keyword.operator.adblock"
								},
								"3": {
									"name": "string.unquoted.adblock"
								}
							}
						},
						{
							"match": "(domain)(=)([^,]+)",
							"captures": {
								"1": {
									"name": "keyword.other.adblock"
								},
								"2": {
									"name": "keyword.operator.adblock"
								},
								"3": {
									"patterns": [
										{
											"include": "#domainListPipeSeparated"
										}
									]
								}
							}
						},
						{
							"match": "(app)(=)([^,]+)",
							"captures": {
								"1": {
									"name": "keyword.other.adblock"
								},
								"2": {
									"name": "keyword.operator.adblock"
								},
								"3": {
									"patterns": [
										{
											"include": "#appListPipeSeparated"
										}
									]
								}
							}
						},
						{
							"match": "\\$",
							"name": "keyword.control.adblock"
						},
						{
							"match": ",",
							"name": "punctuation.definition.adblock"
						},
						{
							"name": "invalid.illegal.adblock",
							"match": ".*"
						}
					]
				},
				"3": {
					"name": "keyword.control.adblock"
				}
			}
		},
		"contentAttributes": {
			"patterns": [
				{
					"match": "(\\[)([^\"=]+?)(\\=)(\".+?\")(\\])",
					"captures": {
						"1": {
							"name": "punctuation.section.adblock"
						},
						"2": {
							"name": "keyword.other.adblock"
						},
						"3": {
							"name": "keyword.operator.adblock"
						},
						"4": {
							"name": "string.quoted.adblock"
						},
						"5": {
							"name": "punctuation.section.adblock"
						}
					}
				},
				{
					"name": "invalid.illegal.adblock",
					"match": ".*"
				}
			]
		},
		"scriptletFunction": {
			"patterns": [
				{
					"match": "((['|\"])(.*?)(?<!\\\\)(\\2))(,\\s*)?",
					"captures": {
						"1": {
							"name": "string.quoted.adblock"
						},
						"5": {
							"name": "keyword.operator.adblock"
						}
					}
				},
				{
					"name": "invalid.illegal.adblock",
					"match": ".*"
				}
			]
		},
		"scriptletFunctionUBO": {
			"patterns": [
				{
					"match": "([^,]*)(,\\s*)?",
					"captures": {
						"1": {
							"name": "string.quoted.adblock"
						},
						"2": {
							"name": "keyword.operator.adblock"
						}
					}
				},
				{
					"name": "invalid.illegal.adblock",
					"match": ".*"
				}
			]
		},
		"cssStyle": {
			"patterns": [
				{
					"include": "#cssStyleBlockWithMediaQuery"
				},
				{
					"include": "#cssStyleBlock"
				},
				{
					"name": "invalid.illegal.adblock",
					"match": ".*"
				}
			]
		},
		"cssProperties": {
			"patterns": [
				{
					"include": "#cssPropertyNames"
				},
				{
					"include": "#cssPropertyValues"
				},
				{
					"include": "#cssPropertiesSeparator"
				}
			]
		},
		"cssPropertiesSeparator": {
			"patterns": [
				{
					"match": ";",
					"name": "punctuation.terminator.rule"
				}
			]
		},
		"cssPropertyNames": {
			"patterns": [
				{
					"begin": "(?<![-a-zA-Z])(?=[-a-zA-Z])",
					"end": "$|(?![-a-zA-Z])",
					"name": "meta.property-name"
				}
			]
		},
		"cssPropertyValues": {
			"patterns": [
				{
					"begin": "(:)\\s*",
					"beginCaptures": {
						"1": {
							"name": "punctuation.separator"
						}
					},
					"end": "\\s*(;)|\\s*(?=}|\\))",
					"endCaptures": {
						"1": {
							"name": "punctuation.terminator"
						}
					},
					"contentName": "meta.property-value",
					"patterns": [
						{
							"include": "#cssSeparator"
						},
						{
							"include": "#cssFunctionCall"
						},
						{
							"include": "#cssKeywords"
						},
						{
							"include": "#cssNumericLiterals"
						},
						{
							"include": "#cssStringLiterals"
						},
						{
							"include": "#cssImportantKeyword"
						}
					]
				}
			]
		},
		"cssStringLiterals": {
			"patterns": [
				{
					"match": "(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")|('[^'\\\\]*(?:\\.[^'\\\\]*)*')",
					"captures": {
						"1": {
							"name": "string.quoted.double"
						},
						"2": {
							"name": "string.quoted.single"
						}
					}
				}
			]
		},
		"cssImportantKeyword": {
			"patterns": [
				{
					"match": "!\\s*important(?![\\w-])",
					"name": "keyword.other.css-important"
				}
			]
		},
		"cssFunctionCall": {
			"patterns": [
				{
					"begin": "([a-zA-Z0-9_]+)(\\()",
					"beginCaptures": {
						"1": {
							"name": "support.function.css-function"
						},
						"2": {
							"name": "punctuation.section.css-function.begin.bracket"
						}
					},
					"end": "((?<!\\\\)\\)|$)",
					"endCaptures": {
						"1": {
							"name": "punctuation.section.css-function.end.bracket"
						}
					},
					"contentName": "meta.function.css-function-arguments",
					"patterns": [
						{
							"include": "#cssSeparator"
						},
						{
							"include": "#cssNumericLiterals"
						},
						{
							"include": "#cssStringLiterals"
						}
					]
				}
			]
		},
		"cssNumericLiterals": {
			"patterns": [
				{
					"match": "(#)(?:[0-9a-fA-F]{3,4}|[0-9a-fA-F]{6}|[0-9a-fA-F]{8})\\b",
					"name": "constant.other.color.rgb-value.hex",
					"captures": {
						"1": {
							"name": "constant.numeric.decimal"
						}
					}
				},
				{
					"match": "(?xi) (?<![\\w-])\n[-+]?(?:[0-9]+(?:\\.[0-9]+)?|\\.[0-9]+)(?:(?<=[0-9])E[-+]?[0-9]+)?(?:(%)|( deg|grad|rad|turn|Hz|kHz|ch|cm|em|ex|fr|in|mm|mozmm|pc|pt|px|q|rem|vh|vmax|vmin|vw|dpi|dpcm|dppx|s|m)\\b)?",
					"name": "constant.numeric.decimal",
					"captures": {
						"1": {
							"name": "keyword.other.unit.percentage"
						},
						"2": {
							"name": "keyword.other.unit"
						}
					}
				}
			]
		},
		"cssKeywords": {
			"patterns": [
				{
					"match": "(?xi) (?<![\\w-])(above|absolute|active|add|additive|after-edge|alias|all|all-petite-caps|all-scroll|all-small-caps|alpha|alphabetic|alternate|alternate-reverse|always|antialiased|auto|auto-pos|available|avoid|avoid-column|avoid-page|avoid-region|backwards|balance|baseline|before-edge|below|bevel|bidi-override|blink|block|block-axis|block-start|block-end|bold|bolder|border|border-box|both|bottom|bottom-outside|break-all|break-word|bullets|butt|capitalize|caption|cell|center|central|char|circle|clip|clone|close-quote|closest-corner|closest-side|col-resize|collapse|color|color-burn|color-dodge|column|column-reverse|common-ligatures|compact|condensed|contain|content|content-box|contents|context-menu|contextual|copy|cover|crisp-edges|crispEdges|crosshair|cyclic|dark|darken|dashed|decimal|default|dense|diagonal-fractions|difference|digits|disabled|disc|discretionary-ligatures|distribute|distribute-all-lines|distribute-letter|distribute-space|dot|dotted|double|double-circle|downleft|downright|e-resize|each-line|ease|ease-in|ease-in-out|ease-out|economy|ellipse|ellipsis|embed|end|evenodd|ew-resize|exact|exclude|exclusion|expanded|extends|extra-condensed|extra-expanded|fallback|farthest-corner|farthest-side|fill|fill-available|fill-box|filled|fit-content|fixed|flat|flex|flex-end|flex-start|flip|flow-root|forwards|freeze|from-image|full-width|geometricPrecision|georgian|grab|grabbing|grayscale|grid|groove|hand|hanging|hard-light|help|hidden|hide|historical-forms|historical-ligatures|horizontal|horizontal-tb|hue|icon|ideograph-alpha|ideograph-numeric|ideograph-parenthesis|ideograph-space|ideographic|inactive|infinite|inherit|initial|inline|inline-axis|inline-block|inline-end|inline-flex|inline-grid|inline-list-item|inline-start|inline-table|inset|inside|inter-character|inter-ideograph|inter-word|intersect|invert|isolate|isolate-override|italic|jis04|jis78|jis83|jis90|justify|justify-all|kannada|keep-all|landscape|large|larger|left|light|lighten|lighter|line|line-edge|line-through|linear|linearRGB|lining-nums|list-item|local|loose|lowercase|lr|lr-tb|ltr|luminance|luminosity|main-size|mandatory|manipulation|manual|margin-box|match-parent|match-source|mathematical|max-content|medium|menu|message-box|middle|min-content|miter|mixed|move|multiply|n-resize|narrower|ne-resize|nearest-neighbor|nesw-resize|newspaper|no-change|no-clip|no-close-quote|no-common-ligatures|no-contextual|no-discretionary-ligatures|no-drop|no-historical-ligatures|no-open-quote|no-repeat|none|nonzero|normal|not-allowed|nowrap|ns-resize|numbers|numeric|nw-resize|nwse-resize|oblique|oldstyle-nums|open|open-quote|optimizeLegibility|optimizeQuality|optimizeSpeed|optional|ordinal|outset|outside|over|overlay|overline|padding|padding-box|page|painted|pan-down|pan-left|pan-right|pan-up|pan-x|pan-y|paused|petite-caps|pixelated|plaintext|pointer|portrait|pre|pre-line|pre-wrap|preserve-3d|progress|progressive|proportional-nums|proportional-width|proximity|radial|recto|region|relative|remove|repeat|repeat-[xy]|reset-size|reverse|revert|ridge|right|rl|rl-tb|round|row|row-resize|row-reverse|row-severse|rtl|ruby|ruby-base|ruby-base-container|ruby-text|ruby-text-container|run-in|running|s-resize|saturation|scale-down|screen|scroll|scroll-position|se-resize|semi-condensed|semi-expanded|separate|sesame|show|sideways|sideways-left|sideways-lr|sideways-right|sideways-rl|simplified|slashed-zero|slice|small|small-caps|small-caption|smaller|smooth|soft-light|solid|space|space-around|space-between|space-evenly|spell-out|square|sRGB|stacked-fractions|start|static|status-bar|swap|step-end|step-start|sticky|stretch|strict|stroke|stroke-box|style|sub|subgrid|subpixel-antialiased|subtract|super|sw-resize|symbolic|table|table-caption|table-cell|table-column|table-column-group|table-footer-group|table-header-group|table-row|table-row-group|tabular-nums|tb|tb-rl|text|text-after-edge|text-before-edge|text-bottom|text-top|thick|thin|titling-caps|top|top-outside|touch|traditional|transparent|triangle|ultra-condensed|ultra-expanded|under|underline|unicase|unset|upleft|uppercase|upright|use-glyph-orientation|use-script|verso|vertical|vertical-ideographic|vertical-lr|vertical-rl|vertical-text|view-box|visible|visibleFill|visiblePainted|visibleStroke|w-resize|wait|wavy|weight|whitespace|wider|words|wrap|wrap-reverse|x|x-large|x-small|xx-large|xx-small|y|zero|zoom-in|zoom-out|true|false)(?![\\w-])",
					"name": "support.constant.property-value.css"
				},
				{
					"match": "(?xi) (?<![\\w-])(arabic-indic|armenian|bengali|cambodian|circle|cjk-decimal|cjk-earthly-branch|cjk-heavenly-stem|cjk-ideographic|decimal|decimal-leading-zero|devanagari|disc|disclosure-closed|disclosure-open|ethiopic-halehame-am|ethiopic-halehame-ti-e[rt]|ethiopic-numeric|georgian|gujarati|gurmukhi|hangul|hangul-consonant|hebrew|hiragana|hiragana-iroha|japanese-formal|japanese-informal|kannada|katakana|katakana-iroha|khmer|korean-hangul-formal|korean-hanja-formal|korean-hanja-informal|lao|lower-alpha|lower-armenian|lower-greek|lower-latin|lower-roman|malayalam|mongolian|myanmar|oriya|persian|simp-chinese-formal|simp-chinese-informal|square|tamil|telugu|thai|tibetan|trad-chinese-formal|trad-chinese-informal|upper-alpha|upper-armenian|upper-latin|upper-roman|urdu)(?![\\w-])",
					"name": "support.constant.css-list-style"
				},
				{
					"match": "(?<![\\w-])(?i:-(?:ah|apple|atsc|epub|hp|khtml|moz|ms|o|rim|ro|tc|wap|webkit|xv)|(?:mso|prince))-[a-zA-Z-]+",
					"name": "support.constant.css-vendors"
				},
				{
					"match": "(?<![\\w-])(?i:arial|century|comic|courier|garamond|georgia|helvetica|impact|lucida|symbol|system-ui|system|tahoma|times|trebuchet|ui-monospace|ui-rounded|ui-sans-serif|ui-serif|utopia|verdana|webdings|sans-serif|serif|monospace)(?![\\w-])",
					"name": "support.constant.css-font"
				},
				{
					"match": "(?xi) (?<![\\w-])(aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|aliceblue|antiquewhite|aquamarine|azure|beige|bisque|blanchedalmond|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|gainsboro|ghostwhite|gold|goldenrod|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|limegreen|linen|magenta|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|oldlace|olivedrab|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|rebeccapurple|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|thistle|tomato|transparent|turquoise|violet|wheat|whitesmoke|yellowgreen)(?![\\w-])",
					"name": "support.constant.css-color"
				}
			]
		},
		"cssStyleBlock": {
			"patterns": [
				{
					"begin": "[\\s\\t]*([^\\{]+)(\\{)",
					"beginCaptures": {
						"1": {
							"patterns": [
								{
									"include": "#cssSelector"
								}
							]
						},
						"2": {
							"name": "punctuation.section.media.begin.bracket"
						}
					},
					"end": "(\\}|$)",
					"endCaptures": {
						"1": {
							"name": "punctuation.section.media.end.bracket"
						}
					},
					"patterns": [
						{
							"include": "#cssProperties"
						}
					]
				}
			]
		},
		"cssStyleBlockWithMediaQuery": {
			"patterns": [
				{
					"begin": "[\\s\\t]*(@media)[\\s\\t]*([^\\{$]+)(\\{)",
					"beginCaptures": {
						"1": {
							"name": "keyword.operator.media"
						},
						"2": {
							"patterns": [
								{
									"include": "#cssMediaQuery"
								}
							]
						},
						"3": {
							"name": "punctuation.section.media.begin.bracket"
						}
					},
					"end": "(?:\\s|\\t)*(\\}|$)",
					"endCaptures": {
						"1": {
							"name": "punctuation.section.media.end.bracket"
						}
					},
					"patterns": [
						{
							"include": "#cssStyleBlock"
						},
						{
							"name": "invalid.illegal.adblock",
							"match": "[^\\}]*"
						}
					]
				}
			]
		},
		"cssMediaQuery": {
			"patterns": [
				{
					"include": "#cssMediaQueryLogicalOperators"
				},
				{
					"include": "#cssMediaQueryTypes"
				},
				{
					"include": "#cssMediaQueryOperators"
				},
				{
					"include": "#cssSeparator"
				},
				{
					"match": "\\s",
					"name": "text"
				},
				{
					"begin": "\\(",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.parameters.begin.bracket.round.css"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.parameters.end.bracket.round.css"
						}
					},
					"patterns": [
						{
							"include": "#cssMediaQueryLogicalOperators"
						},
						{
							"include": "#cssMediaQueryTypes"
						},
						{
							"match": "([\\w-]+)(:)",
							"captures": {
								"1": {
									"name": "support.constant.css-media-property"
								},
								"2": {
									"name": "punctuation.separator.css-media-property-separator"
								}
							}
						},
						{
							"include": "#cssKeywords"
						},
						{
							"include": "#cssNumericLiterals"
						},
						{
							"include": "#cssStringLiterals"
						}
					]
				},
				{
					"name": "invalid.illegal.adblock",
					"match": ".*"
				}
			]
		},
		"cssMediaQueryLogicalOperators": {
			"patterns": [
				{
					"match": "(?<=\\s+|\\(|\\))(not|only|and|or)(?=\\s+|\\()",
					"name": "keyword.operator.logical.css-media-query"
				}
			]
		},
		"cssMediaQueryTypes": {
			"patterns": [
				{
					"match": "(?<=\\s+)(all|aural|braille|embossed|handheld|print|projection|screen|tty|tv)(?=\\s+)",
					"name": "constant.character.css-media-query-type"
				}
			]
		},
		"cssMediaQueryOperators": {
			"patterns": [
				{
					"match": ">=|<=|=|<|>",
					"name": "keyword.operator.comparison.css-media-query"
				}
			]
		},
		"cssSelector": {
			"patterns": [
				{
					"include": "#cssAttributeSelector"
				},
				{
					"include": "#cssCombinator"
				},
				{
					"include": "#cssEscaping"
				},
				{
					"include": "#cssClassSelector"
				},
				{
					"include": "#cssIDSelector"
				},
				{
					"include": "#cssTagSelector"
				},
				{
					"include": "#cssPseudoElementSelector"
				},
				{
					"include": "#cssPseudoSelector"
				},
				{
					"include": "#cssSeparator"
				},
				{
					"include": "#cssWildcard"
				},
				{
					"include": "#cssWhitespace"
				},
				{
					"include": "#extendedCssRemovePseudo"
				},
				{
					"match": ".*",
					"name": "invalid.illegal.css-selector"
				}
			]
		},
		"cssAttributeSelector": {
			"begin": "(?<!\\\\)(\\[)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.entity.begin"
				}
			},
			"end": "(?<!\\\\)(\\]|$)",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.entity.end"
				}
			},
			"patterns": [
				{
					"match": "([-a-zA-Z0-9_]*)(?=[=~\\s\\^\\|\\*\\$\\]])(?:\\s*)(?:(=|~=|\\|=|\\^=|\\$=|\\*=)(?:\\s*)(?:(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")|('[^'\\\\]*(?:\\.[^'\\\\]*)*')|([^\\s\\]\"']+)))?",
					"captures": {
						"1": {
							"name": "entity.other.attribute-name"
						},
						"2": {
							"name": "keyword.operator.attribute-operation"
						},
						"3": {
							"name": "string.quoted.double"
						},
						"4": {
							"name": "string.quoted.single"
						},
						"5": {
							"name": "string.unquoted"
						}
					}
				},
				{
					"name": "invalid.illegal.attribute-selector",
					"match": ".*"
				}
			]
		},
		"cssCombinator": {
			"match": "(?:(?:\\s*)(>|~|\\+|\\|\\|)(?:\\s*))(?=[-a-zA-Z0-9_\\]\\*\\.#\\[\\s\\:])",
			"name": "keyword.operator.combinator"
		},
		"cssEscaping": {
			"patterns": [
				{
					"match": "\\\\.",
					"name": "constant.character.escape"
				},
				{
					"match": "(?:\\s*)(?<=\\\\.)([-a-zA-Z0-9_]+)(?:\\s*)",
					"captures": {
						"1": {
							"name": "entity.other.escaped-id"
						}
					}
				}
			]
		},
		"cssClassSelector": {
			"patterns": [
				{
					"match": "(?:\\s*)(\\.)([-a-zA-Z0-9_\\\\]+)(?:\\s*)",
					"captures": {
						"1": {
							"name": "entity.other"
						},
						"2": {
							"name": "entity.other.class-name"
						}
					}
				}
			]
		},
		"cssIDSelector": {
			"patterns": [
				{
					"match": "(?:\\s*)(#)([-a-zA-Z0-9_\\\\]+)(?:\\s*)",
					"captures": {
						"1": {
							"name": "entity.other"
						},
						"2": {
							"name": "entity.other.element-id"
						}
					}
				}
			]
		},
		"cssTagSelector": {
			"patterns": [
				{
					"match": "(?:\\s*)([-a-zA-Z0-9_\\\\]+)(?:\\s*)",
					"captures": {
						"1": {
							"name": "entity.name.tag"
						}
					}
				}
			]
		},
		"cssPseudoElementSelector": {
			"patterns": [
				{
					"match": "(?<=[-a-zA-Z0-9_\\]\\(\\)#\\*])(?:(::)(before|after|backdrop|cue|cue-region|file-selector-button|first-letter|first-line|selection|grammar-error|marker|placeholder|spelling-error|target-text))(?=$|[#\\s\\.\\[:\\)])",
					"captures": {
						"1": {
							"name": "keyword.operator.pseudo-element"
						},
						"2": {
							"name": "entity.other.property-name"
						}
					}
				}
			]
		},
		"cssPseudoSelector": {
			"patterns": [
				{
					"begin": "(?:(?<=[-a-zA-Z0-9_\\]\\(\\)#\\*\\+\\s>\\\\])(:)(-abp-has|has|if-not|not|is|if)(\\())",
					"beginCaptures": {
						"1": {
							"name": "keyword.operator.pseudo"
						},
						"2": {
							"name": "entity.other.pseudo-class-name"
						},
						"3": {
							"name": "punctuation.section.function.begin.bracket.round"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.function.end.bracket.round"
						}
					},
					"patterns": [
						{
							"include": "#cssSelector"
						}
					]
				},
				{
					"begin": "(?:(?<=[-a-zA-Z0-9_\\]\\(\\)#\\*\\+\\s>\\\\])(:)(upward)(\\())",
					"beginCaptures": {
						"1": {
							"name": "keyword.operator.pseudo"
						},
						"2": {
							"name": "entity.other.pseudo-class-name"
						},
						"3": {
							"name": "punctuation.section.function.begin.bracket.round"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.function.end.bracket.round"
						}
					},
					"patterns": [
						{
							"match": "(?<=\\(\\s*)\\d+(?=(?:\\s*)\\))",
							"name": "constant.numeric"
						},
						{
							"include": "#cssSelector"
						}
					]
				},
				{
					"begin": "(?:(?<=[-a-zA-Z0-9_\\]\\(\\)#\\*\\+\\s>\\\\])(:)(-abp-contains|contains|has-text)(\\())",
					"beginCaptures": {
						"1": {
							"name": "keyword.operator.pseudo"
						},
						"2": {
							"name": "entity.other.pseudo-class-name"
						},
						"3": {
							"name": "punctuation.section.function.begin.bracket.round"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.function.end.bracket.round"
						}
					},
					"patterns": [
						{
							"include": "#regularExpression"
						},
						{
							"match": "((?:[^\\(\\)])+|\\([^\\)]+\\))",
							"name": "string"
						}
					]
				},
				{
					"begin": "(?:(?<=[-a-zA-Z0-9_\\]\\(\\)#\\*\\+\\s>\\\\])(:)(xpath|matches-path)(\\())",
					"beginCaptures": {
						"1": {
							"name": "keyword.operator.pseudo"
						},
						"2": {
							"name": "entity.other.pseudo-class-name"
						},
						"3": {
							"name": "punctuation.section.function.begin.bracket.round"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.function.end.bracket.round"
						}
					},
					"patterns": [
						{
							"match": ".+?(?=\\)(?=\\s*:))|.+?(?=\\)(?=\\s*\\+))|.+?(?=\\)(?=\\s*~))|.+?(?=\\)(?=\\s*>))|.+?(?=\\)(?=\\s*$))",
							"name": "string"
						}
					]
				},
				{
					"begin": "(?:(?<=[-a-zA-Z0-9_\\]\\(\\)#\\*\\+\\s>\\\\])(:)(matches-attr|matches-property)(\\())",
					"beginCaptures": {
						"1": {
							"name": "keyword.operator.pseudo"
						},
						"2": {
							"name": "entity.other.pseudo-class-name"
						},
						"3": {
							"name": "punctuation.section.function.begin.bracket.round"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.function.end.bracket.round"
						}
					},
					"patterns": [
						{
							"match": "(?:\\s*)((?:\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")|(?:'[^'\\\\]*(?:\\.[^'\\\\]*)*'))(?:\\s*)(?:(=)(?:\\s*)(?:(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")|('[^'\\\\]*(?:\\.[^'\\\\]*)*')))?",
							"captures": {
								"1": {
									"name": "string.quoted"
								},
								"2": {
									"name": "keyword.operator"
								},
								"3": {
									"name": "string.quoted"
								}
							}
						}
					]
				},
				{
					"begin": "(?:(?<=[-a-zA-Z0-9_\\]\\(\\)#\\*\\+\\s>\\\\])(:)(matches-css|matches-css-before|matches-css-after)(\\())(?:\\s*)([-a-zA-Z0-9_]+)(?:\\s*)(:)(?:\\s*)",
					"beginCaptures": {
						"1": {
							"name": "keyword.operator.pseudo"
						},
						"2": {
							"name": "entity.other.pseudo-class-name"
						},
						"3": {
							"name": "punctuation.section.function.begin.bracket.round"
						},
						"4": {
							"name": "entity.other.property-name"
						},
						"5": {
							"name": "keyword.operator"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.function.end.bracket.round"
						}
					},
					"patterns": [
						{
							"include": "#regularExpression"
						},
						{
							"match": "[^\\)]+",
							"name": "string"
						}
					]
				},
				{
					"begin": "(?:(?<=[-a-zA-Z0-9_\\]\\(\\)#\\*\\+\\s>\\\\])(:)(nth-child|nth-last-child|nth-of-type|nth-last-of-type|nth-ancestor)(\\())",
					"beginCaptures": {
						"1": {
							"name": "keyword.operator.pseudo"
						},
						"2": {
							"name": "entity.other.pseudo-class-name"
						},
						"3": {
							"name": "punctuation.section.function.begin.bracket.round"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.function.end.bracket.round"
						}
					},
					"patterns": [
						{
							"match": "even|odd|n",
							"name": "support.constant.parity"
						},
						{
							"match": "[-\\+\\-]",
							"name": "keyword.operator"
						},
						{
							"match": "\\d",
							"name": "constant.numeric"
						},
						{
							"match": "[^\\)]+",
							"name": "invalid.illegal"
						}
					]
				},
				{
					"begin": "(?:(?<=[-a-zA-Z0-9_\\]\\(\\)#\\*\\+\\s>\\\\])(:)(min-text-length)(\\())",
					"beginCaptures": {
						"1": {
							"name": "keyword.operator.pseudo"
						},
						"2": {
							"name": "entity.other.pseudo-class-name"
						},
						"3": {
							"name": "punctuation.section.function.begin.bracket.round"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.function.end.bracket.round"
						}
					},
					"patterns": [
						{
							"match": "\\d",
							"name": "constant.numeric"
						},
						{
							"match": "[^\\)]+",
							"name": "invalid.illegal"
						}
					]
				},
				{
					"begin": "(?:(?<=[-a-zA-Z0-9_\\]\\(\\)#\\*\\+\\s>\\\\])(:)(style|-abp-properties)(\\())",
					"beginCaptures": {
						"1": {
							"name": "keyword.operator.pseudo"
						},
						"2": {
							"name": "entity.other.pseudo-class-name"
						},
						"3": {
							"name": "punctuation.section.function.begin.bracket.round"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.function.end.bracket.round"
						}
					},
					"patterns": [
						{
							"include": "#cssProperties"
						}
					]
				},
				{
					"match": "(?<=[-a-zA-Z0-9_\\]\\(\\)#\\*\\+\\s>\\\\])(:)(fullscreen|modal|picture-in-picture|autofill|enabled|disabled|read-only|read-write|placeholder-shown|default|checked|indeterminate|blank|valid|invalid|in-range|out-of-range|required|optional|user-invalid|any-link|link|visited|local-link|target|target-within|scope|playing|paused|root|empty|first-child|last-child|only-child|first-of-type|last-of-type|only-of-type|hover|active|focus|focus-visible|focus-within|before|after|first-letter|first-line|inline)(?=$|[#\\s\\.\\[:\\)+\\~,])",
					"captures": {
						"1": {
							"name": "keyword.operator.pseudo"
						},
						"2": {
							"name": "entity.other.pseudo-class-name"
						}
					}
				}
			]
		},
		"cssSeparator": {
			"patterns": [
				{
					"match": "(?:\\s*)\\,(?:\\s*)",
					"name": "punctuation.separator.list.comma"
				}
			]
		},
		"cssWildcard": {
			"patterns": [
				{
					"match": "\\*",
					"name": "entity.name.tag.wildcard"
				}
			]
		},
		"cssWhitespace": {
			"patterns": [
				{
					"match": "\\s",
					"name": "string.whitespace"
				}
			]
		},
		"extendedCssRemovePseudo": {
			"patterns": [
				{
					"match": "(:)(remove\\(\\))\\s*$",
					"captures": {
						"1": {
							"name": "keyword.operator.pseudo"
						},
						"2": {
							"name": "entity.other.pseudo-class-name"
						}
					}
				}
			]
		},
		"regularExpression": {
			"patterns": [
				{
					"begin": "(/)",
					"beginCaptures": {
						"1": {
							"name": "keyword.other.regex.begin"
						}
					},
					"end": "((?<!\\\\)/)([dgimsuy]*)?",
					"endCaptures": {
						"1": {
							"name": "keyword.other.regex.end"
						},
						"2": {
							"name": "keyword.other.regex"
						}
					},
					"contentName": "string.regexp",
					"patterns": [
						{
							"match": "(?<!\\\\)([/\\^\\$\\|])",
							"name": "keyword.control.regex"
						}
					]
				}
			]
		},
		"domainListCommaSeparated": {
			"patterns": [
				{
					"match": "(~?)([a-zA-Z0-9.*-]+)(,?)",
					"captures": {
						"1": {
							"name": "keyword.other.adblock"
						},
						"2": {
							"name": "string.unquoted.adblock"
						},
						"3": {
							"name": "punctuation.definition.adblock"
						}
					}
				},
				{
					"name": "invalid.illegal.domain-list",
					"match": ".*"
				}
			]
		},
		"domainListPipeSeparated": {
			"patterns": [
				{
					"match": "(~?)([a-zA-Z0-9.*-]+)(\\|?)",
					"captures": {
						"1": {
							"name": "keyword.other.adblock"
						},
						"2": {
							"name": "string.unquoted.adblock"
						},
						"3": {
							"name": "punctuation.definition.adblock"
						}
					}
				},
				{
					"name": "invalid.illegal.domain-list",
					"match": ".*"
				}
			]
		},
		"appListPipeSeparated": {
			"patterns": [
				{
					"match": "((~?)([a-zA-Z0-9.-_]+)(\\|?))",
					"captures": {
						"2": {
							"name": "keyword.other.adblock"
						},
						"3": {
							"name": "string.unquoted.adblock"
						},
						"4": {
							"name": "punctuation.definition.adblock"
						}
					}
				},
				{
					"name": "invalid.illegal.app-list",
					"match": ".*"
				}
			]
		},
		"dnsTypesPipeSeparated": {
			"patterns": [
				{
					"match": "((~?)([a-zA-Z0-9.-_]+)(\\|?))",
					"captures": {
						"2": {
							"name": "keyword.other.adblock"
						},
						"3": {
							"name": "string.unquoted.adblock"
						},
						"4": {
							"name": "punctuation.definition.adblock"
						}
					}
				},
				{
					"name": "invalid.illegal.app-list",
					"match": ".*"
				}
			]
		},
		"dnsClientsPipeSeparated": {
			"patterns": [
				{
					"match": "((~?)([^|]+)(\\|?))",
					"captures": {
						"2": {
							"name": "keyword.other.adblock"
						},
						"3": {
							"name": "string.unquoted.adblock"
						},
						"4": {
							"name": "punctuation.definition.adblock"
						}
					}
				},
				{
					"name": "invalid.illegal.app-list",
					"match": ".*"
				}
			]
		}
	},
	"scopeName": "text.adblock"
}
